#include <cmath>
#include <windows.h>
#include <iostream>
#include <bitset>
#include <ctime>
#include <fstream>
#include <string>
using namespace std;


double c_calculation(double x, double y)
{
    double S;
        S = pow(x, 2) - pow(y, 3) + sqrt(pow(y, x) - M_PI);
    return S;
}


float Deposite(float dep, short strok)
{
    float month, a;

    if(strok == 6)
    {
        a = (dep*16)/100;
        month = a/6;
    }
    if (strok == 12)
    {
        a = (dep*18)/100;
        month = a/12;
    }
    return month;
}

int Bolfort(float jan[])
{
    int sz = 31;
    float bolfort[sz];
    int maximum = 0;
    for (int i = 0; i < sz; i++)
    {
        if (jan[i] < 0.3)
        {
            bolfort[i] = 0;
            continue;
        }
        if ((jan[i] > 0.3) && (jan[i] < 1.5))
            {
                bolfort[i] = 1;
                continue;
            }
        if  ((jan[i] > 1.6) && (jan[i] < 3.4))
            {
                bolfort[i] = 2;
                continue;
            }
        if  ((jan[i] > 3.5) && (jan[i] < 5.4))
            {
                bolfort[i] = 3;
                continue;
            }
        if  ((jan[i] > 5.5) && (jan[i] < 7.9))
           {
                bolfort[i] = 4;
                continue;
            }
        if  ((jan[i] > 8.0) && (jan[i] < 10.7))
            {
                bolfort[i] = 5;
                continue;
            }
        if  ((jan[i] > 10.8) && (jan[i] < 13.8))
            {
                bolfort[i] = 6;
                continue;
            }
        if  ((jan[i] > 13.9) && (jan[i] < 17.1))
            {

                bolfort[i] = 7;
                continue;
            }
        if  ((jan[i] > 17.2) && (jan[i] < 20.7))
            {
                bolfort[i] = 8;
                continue;
            }
        if  ((jan[i] > 20.8) && (jan[i] < 24.4))
            {
                bolfort[i] = 9;
                continue;
            }
        if  ((jan[i] > 24.5) && (jan[i] < 28.4))
            {
                bolfort[i] = 10;
                continue;
            }
        if  ((jan[i] > 28.5) && (jan[i] < 32.6))
            {
                bolfort[i] = 11;
                continue;
            }
        if (jan[i] >= 32.7)
            {
                bolfort[i] = 12;
                continue;
            }
    }
    for(int i = 0; i < sz; i++)
    {
        if(maximum < bolfort[i])
            maximum = bolfort[i];
    }
    return maximum;
}

int BitNumber(int num)
{
    bitset<32> b_number(num);
    if(b_number[13])
    {
        return b_number.count();
    }
    return 32 - b_number.count();
}



string greetings()
{
    return "==============================\n"
           "|Іванов Максим               |\n"
           "|ЦНТУ, Кропивницький, Україна|\n"
           "|2022                        |\n"
           "|=============================\n\n";

}

string addSmth(string path, string text)
{
    bool flag = true;
    string beta = text;
    fstream file(path, ios::out);
    file.close();


    file.open(path, ios::in);
     if(file.is_open())
     {
        cout << "Визначення мови... ";
        for(int i = 0; i < text.length(); i++)
        {
            if((text[i] >= 'A' && text[i] <= 'Z') || (text[i] >= 'a' && text[i] <= 'z'))
                flag = true;
            if((text[i] >= 'А' && text[i] <= 'Я') || (text[i] >= 'а' && text[i] <= 'я'))
                flag = false;
        }
        cout << "Done" << endl;
     }
     else
     {
        cout << "Визначення мови... error" << endl;
     }
    file.close();


    file.open(path, ios::app);
    if(file.is_open())
    {
        cout << "Привітання, Написання... ";
        file << greetings();
        file << text << endl;
        file << "Мова: " << ((flag == true) ? "Англійська\n" : "Українська\n");
        cout << "Done" << endl;
    }
    else
        cout << "Привітання, Написання error" << endl;
    file.close();


    file.open(path, ios::in);
    if(file.is_open())
    {
        cout << "Зміна тексту... ";
        if(flag == true)
        {

            for(int i =0; i < text.length(); i++)
            {
                if(text[i] >= 'a' && text[i] <= 'z')
                    beta[i] = text[i] - 32;
                else
                    beta[i] = text[i];
            }
        }
        else
        {

            for(int i =0; i < text.length(); i++)
            {
                if((text[i] == 'л') && (text[i+1] == 'і') && (text[i+2] == 'н') && (text[i+3] == 'о') && (text[i+4] == 'щ') && (text[i+5] == 'і'))
                {
                    beta[i] = ' ';
                    beta[i+1] = ' ';
                    beta[i+2] = ' ';
                    beta[i+3] = ' ';
                    beta[i+4] = ' ';
                    beta[i+5] = ' ';
                }
                if((text[i] == 'с') && (text[i+1] == 'е') && (text[i+2] == 'с') && (text[i+3] == 'і') && (text[i+4] == 'я'))
                {
                    beta[i] = ' ';
                    beta[i+1] = ' ';
                    beta[i+2] = ' ';
                    beta[i+3] = ' ';
                    beta[i+4] = ' ';
                }
                if((text[i] == 'а') && (text[i+1] == 'к') && (text[i+2] == 'а') && (text[i+3] == 'д') && (text[i+4] == 'е') && (text[i+5] == 'м')
                && (text[i+6] == 'з') && (text[i+7] == 'а') && (text[i+8] == 'б') && (text[i+9] == 'о') && (text[i+10] == 'р') && (text[i+11] == 'г')
                && (text[i+12] == 'о') && (text[i+13] == 'в') && (text[i+14] == 'а') && (text[i+15] == 'н') && (text[i+16] == 'і') && (text[i+17] == 'с')
                && (text[i+18] == 'т') && (text[i+19] == 'ь'))
                {
                    beta[i] = ' ';
                    beta[i+1] = ' ';beta[i+2] = ' ';beta[i+3] = ' ';beta[i+4] = ' ';beta[i+5] = ' ';beta[i+5] = ' ';beta[i+5] = ' ';
                    beta[i+6] = ' ';beta[i+7] = ' ';beta[i+8] = ' ';beta[i+9] = ' ';beta[i+10] = ' ';beta[i+11] = ' ';beta[i+12] = ' ';
                    beta[i+13] = ' ';beta[i+14] = ' ';beta[i+15] = ' ';beta[i+16] = ' ';beta[i+17] = ' ';beta[i+18] = ' ';beta[i+19] = ' ';

                }
            }
        }
        cout << "Done" << endl;
    }
    else
        cout << "Зміна тексту error" << endl;
    file.close();


    file.open(path, ios::app);
    if(file.is_open())
    {
        cout << "Написання зміненого тексту... ";
        file << beta << endl;
        cout << "Done" << endl;
    }
    else
        cout << "Написання зміненого тексту error" << endl;
    file.close();



    long cnt = 0;
    string t;
    file.open(path, ios::in);
    if(file.is_open())
    {
        cout << "Підрахунок символів... ";
        while(!file.eof())
        {
            getline(file, t);
            cnt += t.length();
        }
        cout << "Done" << endl;
    }
    else
        cout << "Підрахунок символів error" << endl;
    file.close();

    file.open(path, ios::app);
    if(file.is_open())
    {
        cout << "Написання кількості символів... ";
        file << "Кількість символів: " << cnt << endl;
        cout << "Done" << endl;
    }
    else
        cout << "Написання кількості символів error" << endl;
    file.close();

}




string PrintRule62(string path)
{
    string rule;
    fstream file(path, ios::out);
    if(file.is_open())
    {
        cout << "Написання закону... ";
        rule = "1. Особи, які навчаються у вищих навчальних закладах, мають право на:\n"
               "1) вибір форми навчання під час вступу до вищого навчального закладу;\n"
               "2) безпечні і нешкідливі умови навчання, праці та побуту;\n"
               "3) трудову діяльність у позанавчальний час;\n"
               "4) додаткову оплачувану відпустку у зв’язку з навчанням за основним місцем роботи, скорочений робочий час та інші пільги, передбачені законодавством для осіб, які поєднують роботу з навчанням;\n"
               "5) безоплатне користування бібліотеками, інформаційними фондами, навчальною, науковою та спортивною базами вищого навчального закладу;\n"
               "6) безоплатне забезпечення інформацією для навчання у доступних форматах з використанням технологій, що враховують обмеження життєдіяльності, зумовлені станом здоров’я (для осіб з особливими освітніми потребами);\n"
               "7) користування виробничою, культурно-освітньою, побутовою, оздоровчою базами вищого навчального закладу у порядку, передбаченому статутом вищого навчального закладу;\n"
               "8) забезпечення гуртожитком на строк навчання у порядку, встановленому законодавством;\n"
               "9) участь у науково-дослідних, дослідно-конструкторських роботах, конференціях, симпозіумах, виставках, конкурсах, представлення своїх робіт для публікації;\n"
               "10) участь у заходах з освітньої, наукової, науково-дослідної, спортивної, мистецької, громадської діяльності, що проводяться в Україні та за кордоном, у встановленому законодавством порядку;\n"
               "11) участь в обговоренні та вирішенні питань удосконалення навчального процесу, науково-дослідної роботи, призначення стипендій, організації дозвілля, побуту, оздоровлення;\n"
               "12) внесення пропозицій щодо умов і розміру плати за навчання;\n"
               "13) участь у громадських об’єднаннях;\n"
               "14) участь у діяльності органів громадського самоврядування вищого навчального закладу, інститутів, факультетів, відділень, вченої ради вищого навчального закладу, органів студентського самоврядування;\n"
               "15) вибір навчальних дисциплін у межах, передбачених відповідною освітньою програмою та робочим навчальним планом, в обсязі, що становить не менш як 25 відсотків загальної кількості кредитів ЄКТС, передбачених для даного рівня вищої освіти. При цьому здобувачі певного рівня вищої освіти мають право вибирати навчальні дисципліни, що пропонуються для інших рівнів вищої освіти, за погодженням з керівником відповідного факультету чи підрозділу;\n"
               "16) навчання одночасно за декількома освітніми програмами, а також у декількох вищих навчальних закладах, за умови отримання тільки однієї вищої освіти за кожним ступенем за кошти державного (місцевого) бюджету;\n"
               "17) академічну мобільність, у тому числі міжнародну;\n"
               "18) отримання соціальної допомоги у випадках, встановлених законодавством;\n"
               "19) зарахування до страхового стажу відповідно до Закону України \"Про загальнообов’язкове державне пенсійне страхування\" періодів навчання на денній формі навчання у вищих навчальних закладах, аспірантурі, докторантурі, клінічній ординатурі, інтернатурі, резидентурі, за умови добровільної сплати страхових внесків;\n"
               "20) академічну відпустку або перерву в навчанні із збереженням окремих прав здобувача вищої освіти, а також на поновлення навчання у порядку, встановленому центральним органом виконавчої влади у сфері освіти і науки;\n"
               "21) участь у формуванні індивідуального навчального плану;\n"
               "22) моральне та/або матеріальне заохочення за успіхи у навчанні, науково-дослідній і громадській роботі, за мистецькі та спортивні досягнення тощо;\n"
               "23) захист від будь-яких форм експлуатації, фізичного та психічного насильства;\n"
               "24) безоплатне проходження практики на підприємствах, в установах, закладах та організаціях, а також на оплату праці під час виконання виробничих функцій згідно із законодавством;\n"
               "25) канікулярну відпустку тривалістю не менш як вісім календарних тижнів на навчальний рік;\n"
               "26) отримання цільових пільгових державних кредитів для здобуття вищої освіти у порядку, визначеному Кабінетом Міністрів України;\n"
               "27) оскарження дій органів управління вищого навчального закладу та їх посадових осіб, педагогічних і науково-педагогічних працівників;\n"
               "28) спеціальний навчально-реабілітаційний супровід та вільний доступ до інфраструктури вищого навчального закладу відповідно до медико-соціальних показань за наявності обмежень життєдіяльності, зумовлених станом здоров’я.\n"
               "2. Особи, які навчаються у вищих навчальних закладах за денною формою навчання за рахунок коштів державного або місцевих бюджетів, мають право на отримання стипендій у встановленому законодавством порядку.\n"
               "3. Особи, які навчаються у вищих навчальних закладах за денною формою навчання, можуть отримувати інші стипендії, призначені фізичними (юридичними) особами.\n"
               "4. Розмір стипендіального фонду вищого навчального закладу повинен забезпечувати виплату академічних стипендій не менш як двом третинам і не більш як 75 відсоткам студентів (курсантів невійськових вищих навчальних закладів) денної форми навчання, які навчаються за кошти державного бюджету, без урахування осіб, які отримують соціальні стипендії.\n"
               "5. Розмір академічної та соціальної стипендій, порядок їх призначення і виплати встановлюються Кабінетом Міністрів України.\n"
               "6. Розмір мінімальної академічної та соціальної стипендій для здобувачів освітніх ступенів вищої освіти не може бути меншим, ніж розмір прожиткового мінімуму з розрахунку на одну особу на місяць. Розмір мінімальної академічної та соціальної стипендій для здобувачів ступеня молодшого бакалавра не може бути меншим, ніж дві третини розміру прожиткового мінімуму з розрахунку на одну особу на місяць.\n"
               "7. Академічні стипендії виплачуються не менш як двом третинам студентів (курсантів) кожного курсу (крім першого семестру першого року навчання) за кожною спеціальністю, без урахування осіб, які отримують соціальні стипендії. Академічну стипендію отримують студенти (курсанти), які згідно з рейтингом, складеним у вищому навчальному закладі за результатами семестрового контролю, здобули найкращі результати навчання. До проведення першого семестрового контролю академічна стипендія у мінімальному розмірі призначається всім студентам (курсантам), зарахованим до вищого навчального закладу на перший курс навчання.\n"
               "8. Особам, які досягли значних успіхів у навчанні та/або науковій діяльності, за рішенням вченої ради вищого навчального закладу можуть призначатися персональні стипендії.\n"
               "9. Здобувачі вищої освіти, які навчаються у вищих навчальних закладах за денною формою навчання, мають право на пільговий проїзд у транспорті у порядку, встановленому Кабінетом Міністрів України.\n"
               "10. Студенти, курсанти вищих навчальних закладів мають право на отримання студентського квитка, зразок якого затверджується центральним органом виконавчої влади у сфері освіти і науки.\n";
        file << rule << endl;
        time_t t;
        t = time(NULL);
        file << ctime(&t);
        cout << "Done" << endl;
    }
    else
        cout << "Написання закону error" << endl;
    file.close();

    long cnt = 0;
    string t;
    file.open(path, ios::in);
    if(file.is_open())
    {
        cout << "Підрахунок символів... ";
        while(!file.eof())
        {
            getline(file, t);
            cnt += t.length();
        }
        cout << "Done" << endl;
    }
    else
        cout << "Підрахунок символів error" << endl;
    file.close();

    file.open(path, ios::app);
    if(file.is_open())
    {
        cout << "Написання кількості символів... ";
        file << "Кількість символів: " << cnt << endl;
        cout << "Done" << endl;
    }
    else
        cout << "Написання кількості символів error" << endl;
    file.close();
}



long CalcBin(string path, double x, double y, double z, int b)
{

    fstream file(path, ios::out);
    if(file.is_open())
    {
        cerr << "Підрахунок... ";
        bitset<32> b_number{b};
        file << "S = " << c_calculation(x, y) << endl;
        file << b_number << endl;
        cerr << "Done" << endl;
    }
    else
        cout << "Підрахунок error" << endl;
    file.close();

    long cnt = 0;
    string t;
    file.open(path, ios::in);
    if(file.is_open())
    {
        cerr << "Підрахунок символів... ";
        while(!file.eof())
        {
            getline(file, t);
            cnt += t.length();
        }
        cerr << "Done" << endl;
    }
    else
        cout << "Підрахунок символів error" << endl;
    file.close();

    file.open(path, ios::app);
    if(file.is_open())
    {
        cerr << "Написання кількості символів... ";
        file << "Кількість символів: " << cnt << endl;
        cerr << "Done" << endl;
    }
    else
        cout << "Написання кількості символів error" << endl;
    file.close();
}


void HowManySymbols(string path)
{
    long cnt = 0;
    string t;
    fstream file(path, ios::in);
    if(file.is_open())
    {
        cout << "Підрахунок символів... ";
        while(!file.eof())
        {
            getline(file, t);
            cnt += t.length();
        }
        cout << "Done" << endl;
    }
    else
        cout << "Підрахунок символів error" << endl;
    file.close();

    file.open(path, ios::app);
    if(file.is_open())
    {
        cout << "Написання кількості символів... ";
        file << "Кількість символів: " << cnt << endl;
        cout << "Done" << endl;
    }
    else
        cout << "Написання кількості символів error" << endl;
    file.close();
}
